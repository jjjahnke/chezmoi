# ------------------------------------------------------------------------------
# Zsh Configuration - Managed by chezmoi
# ------------------------------------------------------------------------------

# --- Zsh History Configuration ---
HISTFILE=~/.zsh_history
HISTSIZE=10000
SAVEHIST=10000
setopt APPEND_HISTORY
setopt SHARE_HISTORY
setopt HIST_IGNORE_DUPS
setopt HIST_IGNORE_SPACE

# --- Zsh Completion ---
# Initializes the Zsh completion system.
autoload -U compinit
compinit

# --- Version Banner ---
echo "Now using node v$(node --version | sed 's/v//')"
echo "Now using golang v$(go version | awk '{print $3}' | sed 's/go//')"
echo "Now using python v$(python -V | awk '{print $2}' | cut -d. -f1,2) (pip v$(pip -V | awk '{print $2}'))"

# --- Custom Prompt ---
setopt PROMPT_SUBST

# Function to get the current git branch
parse_git_branch() {
  git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'
}

# Setup a red prompt for root and a green one for users.
if [[ $EUID == 0 ]] ; then
  PROMPT='%F{red}%m %n [%f %. %F{red}]%f%F{magenta}$(parse_git_branch)%f ->'$'\n'
else
  PROMPT='%F{green}%m %n [%f %. %F{green}]%f%F{magenta}$(parse_git_branch)%f ->'$'\n'
fi

# --- Kubernetes Configuration ---
# Dynamically set KUBECONFIG to merge all configs in ~/.kube/configs
KUBECONFIG_DIR="$HOME/.kube/configs"
if [ -d "$KUBECONFIG_DIR" ]; then
  KUBECONFIG_FILES=$(find "$KUBECONFIG_DIR" -type f \( -name "*.yaml" -o -name "*.yml" \) | tr '\n' ':')
  if [ -n "$KUBECONFIG_FILES" ]; then
    export KUBECONFIG="${KUBECONFIG_FILES%:}" # Remove trailing colon
  fi
fi

# --- Kubernetes Aliases ---
alias k=kubectl
alias kcx=kubectx
alias kns=kubens

# Enable completion for aliases
compdef _kubectl k
compdef _kubectx kcx
compdef _kubens kns
